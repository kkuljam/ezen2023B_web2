# JDBC 연동
# 1. 해당 JDBC 클래스를 호출한다.
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# 2. 해당 JDBC 클래스 이용한 접속할 DB서버 경로 설정
spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
# 3. DB서버의 아이디 와 비밀번호
spring.datasource.username=root
spring.datasource.password=1234
#4. JPA DDL에 대해 옵션
# 1. 서버 켜질 때 DDL 생성 여부
spring.jpa.hibernate.ddl-auto = create
#spring.jpa.hibernate.ddl-auto = update

# 작업시 테스트 확인용===============================================
#5. JPA 가 SQL 실행한 결과 보고 있을 때 CONSOLE에 실행된 SQL 표시
spring.jpa.properties.hibernate.show_sql=true
#6. CONSOLE 에 실행된 sql 표시할때 엔터처리
spring.jpa.properties.hibernate.format_sql=true
#7. 샘플 데이터
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
# 샘플 데이터 (resources 폴더 내 data.sql 파일 내 코드를 읽어온다.)
#====================================================================

# 1.=========================================== 카카오==========================================
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost:8080/login/oauth2/code/kakao

spring.security.oauth2.client.registration.kakao.client-id=97d9775c7134c493d81b65b319df80a7
spring.security.oauth2.client.registration.kakao.client-secret=l6QwiWOCl7No9XvTblkqQjUH2Hs7MxKt
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname

#spring.security.oauth2.client.provider.kakao.user-name-attribute = id
#---------------------------------------------------------
## 1. 인가 코드 받기 URL정의
#spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
## 5. 토큰(증표) 요청 받기 URL정의
#spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
#
## 0. 스프링은 카카오 회사를 모르기때문에 클라이언트 이름 정의
#spring.security.oauth2.client.registration.kakao.client-name = kakao
## 2. 앱키 ( 해당 개발자의 애플리케이션 REST API 키 )
## 앱키
#spring.security.oauth2.client.registration.kakao.client-id=97d9775c7134c493d81b65b319df80a7
## 앱키 비밀번호
#spring.security.oauth2.client.registration.kakao.client-secret=l6QwiWOCl7No9XvTblkqQjUH2Hs7MxKt
## 인증 요청 메소드방식
#spring.security.oauth2.client.registration.kakao.client-authentication-method = client_secret_post
## 3. 인가 받을 서버의 주소
#spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost:8080/login/oauth2/code/kakao
## 4. 인가 안에 받을(동의항목) 매개변수 ( 카카오 계정에서 가져올 카카오회원정보들 )
#spring.security.oauth2.client.registration.kakao.scope=profile_nickname

# 2.======================================== 네이버================================================================================
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.user-name-attribute=response
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me

spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost:8080/login/oauth2/code/naver

spring.security.oauth2.client.registration.naver.client-id=pWn96QKqvVGZjhg8r2gy
spring.security.oauth2.client.registration.naver.client-secret=riBG5DqmtL
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.scope=nickname,email


# 3.============================================= 구글 (스프링 설정 제공)=======================================================================
spring.security.oauth2.client.registration.google.client-id=1010955160971-ck0m0deau8c3e5r8th3gk7qqlltfammg.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile












